export const font8x8_basic = [
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0000 (nul)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0001
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0002
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0003
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0004
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0005
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0006
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0007
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0008
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0009
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000A
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000B
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000C
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000D
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000E
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+000F
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0010
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0011
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0012
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0013
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0014
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0015
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0016
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0017
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0018
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0019
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001A
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001B
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001C
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001D
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001E
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+001F
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0020 (space)
    [ 0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00],   // U+0021 (!)
    [ 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0022 (")
    [ 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00],   // U+0023 (#)
    [ 0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00],   // U+0024 ($)
    [ 0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00],   // U+0025 (%)
    [ 0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00],   // U+0026 (&)
    [ 0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0027 (')
    [ 0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00],   // U+0028 (()
    [ 0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00],   // U+0029 ())
    [ 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00],   // U+002A (*)
    [ 0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00],   // U+002B (+)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06],   // U+002C (,)
    [ 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00],   // U+002D (-)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00],   // U+002E (.)
    [ 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00],   // U+002F (/)
    [ 0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00],   // U+0030 (0)
    [ 0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00],   // U+0031 (1)
    [ 0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00],   // U+0032 (2)
    [ 0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00],   // U+0033 (3)
    [ 0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00],   // U+0034 (4)
    [ 0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00],   // U+0035 (5)
    [ 0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00],   // U+0036 (6)
    [ 0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00],   // U+0037 (7)
    [ 0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00],   // U+0038 (8)
    [ 0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00],   // U+0039 (9)
    [ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00],   // U+003A (:)
    [ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06],   // U+003B (;)
    [ 0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00],   // U+003C (<)
    [ 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00],   // U+003D (=)
    [ 0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00],   // U+003E (>)
    [ 0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00],   // U+003F (?)
    [ 0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00],   // U+0040 (@)
    [ 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00],   // U+0041 (A)
    [ 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00],   // U+0042 (B)
    [ 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00],   // U+0043 (C)
    [ 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00],   // U+0044 (D)
    [ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00],   // U+0045 (E)
    [ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00],   // U+0046 (F)
    [ 0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00],   // U+0047 (G)
    [ 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00],   // U+0048 (H)
    [ 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00],   // U+0049 (I)
    [ 0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00],   // U+004A (J)
    [ 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00],   // U+004B (K)
    [ 0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00],   // U+004C (L)
    [ 0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00],   // U+004D (M)
    [ 0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00],   // U+004E (N)
    [ 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00],   // U+004F (O)
    [ 0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00],   // U+0050 (P)
    [ 0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00],   // U+0051 (Q)
    [ 0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00],   // U+0052 (R)
    [ 0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00],   // U+0053 (S)
    [ 0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00],   // U+0054 (T)
    [ 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00],   // U+0055 (U)
    [ 0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00],   // U+0056 (V)
    [ 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00],   // U+0057 (W)
    [ 0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00],   // U+0058 (X)
    [ 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00],   // U+0059 (Y)
    [ 0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00],   // U+005A (Z)
    [ 0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00],   // U+005B ([)
    [ 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00],   // U+005C (\)
    [ 0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00],   // U+005D (])
    [ 0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00],   // U+005E (^)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],   // U+005F (_)
    [ 0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+0060 (`)
    [ 0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00],   // U+0061 (a)
    [ 0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00],   // U+0062 (b)
    [ 0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00],   // U+0063 (c)
    [ 0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00],   // U+0064 (d)
    [ 0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00],   // U+0065 (e)
    [ 0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00],   // U+0066 (f)
    [ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F],   // U+0067 (g)
    [ 0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00],   // U+0068 (h)
    [ 0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00],   // U+0069 (i)
    [ 0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E],   // U+006A (j)
    [ 0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00],   // U+006B (k)
    [ 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00],   // U+006C (l)
    [ 0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00],   // U+006D (m)
    [ 0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00],   // U+006E (n)
    [ 0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00],   // U+006F (o)
    [ 0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F],   // U+0070 (p)
    [ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78],   // U+0071 (q)
    [ 0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00],   // U+0072 (r)
    [ 0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00],   // U+0073 (s)
    [ 0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00],   // U+0074 (t)
    [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00],   // U+0075 (u)
    [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00],   // U+0076 (v)
    [ 0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00],   // U+0077 (w)
    [ 0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00],   // U+0078 (x)
    [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F],   // U+0079 (y)
    [ 0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00],   // U+007A (z)
    [ 0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00],   // U+007B ([)
    [ 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00],   // U+007C (|)
    [ 0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00],   // U+007D (])
    [ 0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+007E (~)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]    // U+007F
];    

export const font8x8_block = [
    [ 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00],   // U+2580 (top half)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],   // U+2581 (box 1/8)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF],   // U+2582 (box 2/8)
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF],   // U+2583 (box 3/8)
    [ 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2584 (bottom half)
    [ 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2585 (box 5/8)
    [ 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2586 (box 6/8)
    [ 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2587 (box 7/8)
    [ 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2588 (solid)
    [ 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F],   // U+2589 (box 7/8)
    [ 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F],   // U+258A (box 6/8)
    [ 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F],   // U+258B (box 5/8)
    [ 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F],   // U+258C (left half)
    [ 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07],   // U+258D (box 3/8)
    [ 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03],   // U+258E (box 2/8)
    [ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01],   // U+258F (box 1/8)
    [ 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0],   // U+2590 (right half)
    [ 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00],   // U+2591 (25% solid)
    [ 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA],   // U+2592 (50% solid)
    [ 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55],   // U+2593 (75% solid)
    [ 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],   // U+2594 (box 1/8)
    [ 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80],   // U+2595 (box 1/8)
    [ 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F],   // U+2596 (box bottom left)
    [ 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0],   // U+2597 (box bottom right)
    [ 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00],   // U+2598 (box top left)
    [ 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF],   // U+2599 (boxes left and bottom)
    [ 0x0F, 0x0F, 0x0F, 0x0F, 0xF0, 0xF0, 0xF0, 0xF0],   // U+259A (boxes top-left and bottom right)
    [ 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F],   // U+259B (boxes top and left)
    [ 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0],   // U+259C (boxes top and right)
    [ 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00],   // U+259D (box top right)
    [ 0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F],   // U+259E (boxes top right and bottom left)
    [ 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF],   // U+259F (boxes right and bottom)
];

export const font8x8_box = [
    [ 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00],   // U+2500 (thin horizontal)
    [ 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00],   // U+2501 (thick horizontal)
    [ 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08],   // U+2502 (thin vertical)
    [ 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18],   // U+2503 (thich vertical)
    [ 0x00, 0x00, 0x00, 0x00, 0xBB, 0x00, 0x00, 0x00],   // U+2504 (thin horizontal dashed)
    [ 0x00, 0x00, 0x00, 0xBB, 0xBB, 0x00, 0x00, 0x00],   // U+2505 (thick horizontal dashed)
    [ 0x08, 0x00, 0x08, 0x08, 0x08, 0x00, 0x08, 0x08],   // U+2506 (thin vertical dashed)
    [ 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18],   // U+2507 (thich vertical dashed)
    [ 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00],   // U+2508 (thin horizontal dotted)
    [ 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x00],   // U+2509 (thick horizontal dotted)
    [ 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08],   // U+250A (thin vertical dotted)
    [ 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18],   // U+250B (thich vertical dotted)
    [ 0x00, 0x00, 0x00, 0x00, 0xf8, 0x08, 0x08, 0x08],   // U+250C (down L, right L)
    [ 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08],   // U+250D (down L, right H)
    [ 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18],   // U+250E (down H, right L)
    [ 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x18, 0x18, 0x18],   // U+250F (down H, right H)
    [ 0x00, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x08, 0x08],   // U+2510 (down L, left L)
    [ 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x08, 0x08, 0x08],   // U+2511 (down L, left H)
    [ 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18],   // U+2512 (down H, left L)
    [ 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18],   // U+2513 (down H, left H)
    [ 0x08, 0x08, 0x08, 0x08, 0xf8, 0x00, 0x00, 0x00],   // U+2514 (up L, right L)
    [ 0x08, 0x08, 0x08, 0xf8, 0xf8, 0x00, 0x00, 0x00],   // U+2515 (up L, right H)
    [ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00],   // U+2516 (up H, right L)
    [ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x00, 0x00, 0x00],   // U+2517 (up H, right H)
    [ 0x08, 0x08, 0x08, 0x08, 0x0f, 0x00, 0x00, 0x00],   // U+2518 (up L, left L)
    [ 0x08, 0x08, 0x08, 0x0f, 0x0f, 0x00, 0x00, 0x00],   // U+2519 (up L, left H)
    [ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00],   // U+251A (up H, left L)
    [ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x00, 0x00, 0x00],   // U+251B (up H, left H)
    [ 0x08, 0x08, 0x08, 0x08, 0xf8, 0x08, 0x08, 0x08],   // U+251C (down L, right L, up L)
    [ 0x08, 0x08, 0x08, 0xf8, 0xf8, 0x08, 0x08, 0x08],   // U+251D (down L, right H, up L)
    [ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x08, 0x08, 0x08],   // U+251E (down L, right L, up H)
    [ 0x08, 0x08, 0x08, 0x08, 0xf8, 0x18, 0x18, 0x18],   // U+251F (down H, right L, up L)
    [ 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18],   // U+2520 (down H, right L, up H)
    [ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x08, 0x08, 0x08],   // U+2521 (down L, right H, up H)
    [ 0x08, 0x08, 0x08, 0xf8, 0xf8, 0x18, 0x18, 0x18],   // U+2522 (down H, right H, up L)
    [ 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x18, 0x18, 0x18],   // U+2523 (down H, right H, up H)
    [ 0x08, 0x08, 0x08, 0x08, 0x0f, 0x08, 0x08, 0x08],   // U+2524 (down L, left L, up L)
    [ 0x08, 0x08, 0x08, 0x0f, 0x0f, 0x08, 0x08, 0x08],   // U+2525 (down L, left H, up L)
    [ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x08, 0x08, 0x08],   // U+2526 (down L, left L, up H)
    [ 0x08, 0x08, 0x08, 0x08, 0x1f, 0x18, 0x18, 0x18],   // U+2527 (down H, left L, up L)
    [ 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18],   // U+2528 (down H, left L, up H)
    [ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x08, 0x08, 0x08],   // U+2529 (down L, left H, up H)
    [ 0x08, 0x08, 0x08, 0x1f, 0x1f, 0x18, 0x18, 0x18],   // U+252A (down H, left H, up L)
    [ 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x18],   // U+252B (down H, left H, up H)
    [ 0x00, 0x00, 0x00, 0x00, 0xff, 0x08, 0x08, 0x08],   // U+252C (down L, right L, left L)
    [ 0x00, 0x00, 0x00, 0x0f, 0xff, 0x08, 0x08, 0x08],   // U+252D (down L, right L, left H)
    [ 0x00, 0x00, 0x00, 0xf8, 0xff, 0x08, 0x08, 0x08],   // U+252E (down L, right H, left L)
    [ 0x00, 0x00, 0x00, 0xff, 0xff, 0x08, 0x08, 0x08],   // U+252F (down L, right H, left H)
    [ 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18],   // U+2530 (down H, right L, left L)
    [ 0x00, 0x00, 0x00, 0x1f, 0xff, 0x18, 0x18, 0x18],   // U+2531 (down H, right L, left H)
    [ 0x00, 0x00, 0x00, 0xf8, 0xff, 0x18, 0x18, 0x18],   // U+2532 (down H, right H, left L)
    [ 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x18, 0x18],   // U+2533 (down H, right H, left H)
    [ 0x08, 0x08, 0x08, 0x08, 0xff, 0x00, 0x00, 0x00],   // U+2534 (up L, right L, left L)
    [ 0x08, 0x08, 0x08, 0x0f, 0xff, 0x00, 0x00, 0x00],   // U+2535 (up L, right L, left H)
    [ 0x08, 0x08, 0x08, 0xf8, 0xff, 0x00, 0x00, 0x00],   // U+2536 (up L, right H, left L)
    [ 0x08, 0x08, 0x08, 0xff, 0xff, 0x00, 0x00, 0x00],   // U+2537 (up L, right H, left H)
    [ 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00],   // U+2538 (up H, right L, left L)
    [ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x00, 0x00, 0x00],   // U+2539 (up H, right L, left H)
    [ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x00, 0x00, 0x00],   // U+253A (up H, right H, left L)
    [ 0x18, 0x18, 0x18, 0xff, 0xff, 0x00, 0x00, 0x00],   // U+253B (up H, right H, left H)
    [ 0x08, 0x08, 0x08, 0x08, 0xff, 0x08, 0x08, 0x08],   // U+253C (up L, right L, left L, down L)
    [ 0x08, 0x08, 0x08, 0x0f, 0xff, 0x08, 0x08, 0x08],   // U+253D (up L, right L, left H, down L)
    [ 0x08, 0x08, 0x08, 0xf8, 0xff, 0x08, 0x08, 0x08],   // U+253E (up L, right H, left L, down L)
    [ 0x08, 0x08, 0x08, 0xff, 0xff, 0x08, 0x08, 0x08],   // U+253F (up L, right H, left H, down L)
    [ 0x18, 0x18, 0x18, 0x18, 0xff, 0x08, 0x08, 0x08],   // U+2540 (up H, right L, left L, down L)
    [ 0x08, 0x08, 0x08, 0x08, 0xff, 0x18, 0x18, 0x18],   // U+2541 (up L, right L, left L, down H)
    [ 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18],   // U+2542 (up H, right L, left L, down H)
    [ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x08, 0x08, 0x08],   // U+2543 (up H, right L, left H, down L)
    [ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x08, 0x08, 0x08],   // U+2544 (up H, right H, left L, down L)
    [ 0x08, 0x08, 0x08, 0x1f, 0xff, 0x18, 0x18, 0x18],   // U+2545 (up L, right L, left H, down H)
    [ 0x08, 0x08, 0x08, 0xf8, 0xff, 0x18, 0x18, 0x18],   // U+2546 (up L, right H, left L, down H)
    [ 0x08, 0x08, 0x08, 0xff, 0xff, 0x18, 0x18, 0x18],   // U+2547 (up L, right H, left H, down H)
    [ 0x18, 0x18, 0x18, 0xff, 0xff, 0x08, 0x08, 0x08],   // U+254B (up H, right H, left H, down L)
    [ 0x18, 0x18, 0x18, 0xf8, 0xff, 0x18, 0x18, 0x18],   // U+254A (up H, right H, left L, down H)
    [ 0x18, 0x18, 0x18, 0x1f, 0xff, 0x18, 0x18, 0x18],   // U+2549 (up H, right L, left H, down H)
    [ 0x18, 0x18, 0x18, 0xff, 0xff, 0x18, 0x18, 0x18],   // U+254B (up H, right H, left H, down H)
    [ 0x00, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x00, 0x00],   // U+254C (thin horizontal broken)
    [ 0x00, 0x00, 0x00, 0xE7, 0xE7, 0x00, 0x00, 0x00],   // U+254D (thick horizontal broken)
    [ 0x08, 0x08, 0x08, 0x00, 0x00, 0x08, 0x08, 0x08],   // U+254E (thin vertical broken)
    [ 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18],   // U+254F (thich vertical broken)
    [ 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00],   // U+2550 (double horizontal)
    [ 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14],   // U+2551 (double vertical)
    [ 0x00, 0x00, 0x00, 0xF8, 0x08, 0xF8, 0x08, 0x08],   // U+2552 (down L, right D)
    [ 0x00, 0x00, 0x00, 0x00, 0xFC, 0x14, 0x14, 0x14],   // U+2553 (down D, right L)
    [ 0x00, 0x00, 0x00, 0xFC, 0x04, 0xF4, 0x14, 0x14],   // U+2554 (down D, right D)
    [ 0x00, 0x00, 0x00, 0x0F, 0x08, 0x0F, 0x08, 0x08],   // U+2555 (down L, left D)
    [ 0x00, 0x00, 0x00, 0x00, 0x1F, 0x14, 0x14, 0x14],   // U+2556 (down D, left L)
    [ 0x00, 0x00, 0x00, 0x1F, 0x10, 0x17, 0x14, 0x14],   // U+2557 (down D, left D)
    [ 0x08, 0x08, 0x08, 0xF8, 0x08, 0xF8, 0x00, 0x00],   // U+2558 (up L, right D)
    [ 0x14, 0x14, 0x14, 0x14, 0xFC, 0x00, 0x00, 0x00],   // U+2559 (up D, right L)
    [ 0x14, 0x14, 0x14, 0xF4, 0x04, 0xFC, 0x00, 0x00],   // U+255A (up D, right D)
    [ 0x08, 0x08, 0x08, 0x0F, 0x08, 0x0F, 0x00, 0x00],   // U+255B (up L, left D)
    [ 0x14, 0x14, 0x14, 0x14, 0x1F, 0x00, 0x00, 0x00],   // U+255C (up D, left L)
    [ 0x14, 0x14, 0x14, 0x17, 0x10, 0x1F, 0x00, 0x00],   // U+255D (up D, left D)
    [ 0x08, 0x08, 0x08, 0xF8, 0x08, 0xF8, 0x08, 0x08],   // U+255E (up L, down L, right D)
    [ 0x14, 0x14, 0x14, 0x14, 0xF4, 0x14, 0x14, 0x14],   // U+255F (up D, down D, right L)
    [ 0x14, 0x14, 0x14, 0xF4, 0x04, 0xF4, 0x14, 0x14],   // U+2560 (up D, down D, right D)
    [ 0x08, 0x08, 0x08, 0x0F, 0x08, 0x0F, 0x08, 0x08],   // U+2561 (up L, down L, left D)
    [ 0x14, 0x14, 0x14, 0x14, 0x17, 0x14, 0x14, 0x14],   // U+2562 (up D, down D, left L)
    [ 0x14, 0x14, 0x14, 0x17, 0x10, 0x17, 0x14, 0x14],   // U+2563 (up D, down D, left D)
    [ 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x08, 0x08],   // U+2564 (left D, right D, down L)
    [ 0x00, 0x00, 0x00, 0x00, 0xFF, 0x14, 0x14, 0x14],   // U+2565 (left L, right L, down D)
    [ 0x00, 0x00, 0x00, 0xFF, 0x00, 0xF7, 0x14, 0x14],   // U+2566 (left D, right D, down D)
    [ 0x08, 0x08, 0x08, 0xFF, 0x00, 0xFF, 0x00, 0x00],   // U+2567 (left D, right D, up L)
    [ 0x14, 0x14, 0x14, 0x14, 0xFF, 0x00, 0x00, 0x00],   // U+2568 (left L, right L, up D)
    [ 0x14, 0x14, 0x14, 0xF7, 0x00, 0xFF, 0x00, 0x00],   // U+2569 (left D, right D, up D)
    [ 0x08, 0x08, 0x08, 0xFF, 0x08, 0xFF, 0x08, 0x08],   // U+256A (left D, right D, down L, up L)
    [ 0x14, 0x14, 0x14, 0x14, 0xFF, 0x14, 0x14, 0x14],   // U+256B (left L, right L, down D, up D)
    [ 0x14, 0x14, 0x14, 0xF7, 0x00, 0xF7, 0x14, 0x14],   // U+256C (left D, right D, down D, up D)
    [ 0x00, 0x00, 0x00, 0x00, 0xE0, 0x10, 0x08, 0x08],   // U+256D (curve down-right)
    [ 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x08, 0x08],   // U+256E (curve down-left)
    [ 0x08, 0x08, 0x08, 0x04, 0x03, 0x00, 0x00, 0x00],   // U+256F (curve up-left)
    [ 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x00, 0x00],   // U+2570 (curve up-right)
    [ 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01],   // U+2571 (diagonal bottom-left to top-right)
    [ 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80],   // U+2572 (diagonal bottom-right to top-left)
    [ 0x81, 0x42, 0x24, 0x18, 0x18, 0x24, 0x42, 0x81],   // U+2573 (diagonal cross)
    [ 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00],   // U+2574 (left L)
    [ 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00],   // U+2575 (up L)
    [ 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00],   // U+2576 (right L)
    [ 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08],   // U+2577 (down L)
    [ 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00],   // U+2578 (left H)
    [ 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00],   // U+2579 (up H)
    [ 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00],   // U+257A (right H)
    [ 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18],   // U+257B (down H)
    [ 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x00],   // U+257C (right H, left L)
    [ 0x08, 0x08, 0x08, 0x08, 0x18, 0x18, 0x18, 0x18],   // U+257D (up L, down H)
    [ 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00],   // U+257E (right L, left H)
    [ 0x18, 0x18, 0x18, 0x18, 0x08, 0x08, 0x08, 0x08]    // U+257F (up H, down L)
];

export const VGA_RGB_table = [
    0x000000, 0x0000a8, 0x00a800, 0x00a8a8, 0xa80000, 0xa800a8, 0xa85400, 0xa8a8a8, 0x545454, 0x5454fc, 0x54fc54, 0x54fcfc, 0xfc5454, 0xfc54fc, 0xfcfc54, 0xfcfcfc,
    0x000000, 0x141414, 0x202020, 0x2c2c2c, 0x383838, 0x444444, 0x505050, 0x606060, 0x707070, 0x808080, 0x909090, 0xa0a0a0, 0xb4b4b4, 0xc8c8c8, 0xe0e0e0, 0xfcfcfc,
    0x0000fc, 0x4000fc, 0x7c00fc, 0xbc00fc, 0xfc00fc, 0xfc00bc, 0xfc007c, 0xfc0040, 0xfc0000, 0xfc4000, 0xfc7c00, 0xfcbc00, 0xfcfc00, 0xbcfc00, 0x7cfc00, 0x40fc00,
    0x00fc00, 0x00fc40, 0x00fc7c, 0x00fcbc, 0x00fcfc, 0x00bcfc, 0x007cfc, 0x0040fc, 0x7c7cfc, 0x9c7cfc, 0xbc7cfc, 0xdc7cfc, 0xfc7cfc, 0xfc7cdc, 0xfc7cbc, 0xfc7c9c,
    0xfc7c7c, 0xfc9c7c, 0xfcbc7c, 0xfcdc7c, 0xfcfc7c, 0xdcfc7c, 0xbcfc7c, 0x9cfc7c, 0x7cfc7c, 0x7cfc9c, 0x7cfcbc, 0x7cfcdc, 0x7cfcfc, 0x7cdcfc, 0x7cbcfc, 0x7c9cfc,
    0xb4b4fc, 0xc4b4fc, 0xd8b4fc, 0xe8b4fc, 0xfcb4fc, 0xfcb4e8, 0xfcb4d8, 0xfcb4c4, 0xfcb4b4, 0xfcc4b4, 0xfcd8b4, 0xfce8b4, 0xfcfcb4, 0xe8fcb4, 0xd8fcb4, 0xc4fcb4,
    0xb4fcb4, 0xb4fcc4, 0xb4fcd8, 0xb4fce8, 0xb4fcfc, 0xb4e8fc, 0xb4d8fc, 0xb4c4fc, 0x000070, 0x1c0070, 0x380070, 0x540070, 0x700070, 0x700054, 0x700038, 0x70001c,
    0x700000, 0x701c00, 0x703800, 0x705400, 0x707000, 0x547000, 0x387000, 0x1c7000, 0x007000, 0x00701c, 0x007038, 0x007054, 0x007070, 0x005470, 0x003870, 0x001c70,
    0x383870, 0x443870, 0x543870, 0x603870, 0x703870, 0x703860, 0x703854, 0x703844, 0x703838, 0x704438, 0x705438, 0x706038, 0x707038, 0x607038, 0x547038, 0x447038,
    0x387038, 0x387044, 0x387054, 0x387060, 0x387070, 0x386070, 0x385470, 0x384470, 0x505070, 0x585070, 0x605070, 0x685070, 0x705070, 0x705068, 0x705060, 0x705058,
    0x705050, 0x705850, 0x706050, 0x706850, 0x707050, 0x687050, 0x607050, 0x587050, 0x507050, 0x507058, 0x507060, 0x507068, 0x507070, 0x506870, 0x506070, 0x505870,
    0x000040, 0x100040, 0x200040, 0x300040, 0x400040, 0x400030, 0x400020, 0x400010, 0x400000, 0x401000, 0x402000, 0x403000, 0x404000, 0x304000, 0x204000, 0x104000,
    0x004000, 0x004010, 0x004020, 0x004030, 0x004040, 0x003040, 0x002040, 0x001040, 0x202040, 0x282040, 0x302040, 0x382040, 0x402040, 0x402038, 0x402030, 0x402028,
    0x402020, 0x402820, 0x403020, 0x403820, 0x404020, 0x384020, 0x304020, 0x284020, 0x204020, 0x204028, 0x204030, 0x204038, 0x204040, 0x203840, 0x203040, 0x202840,
    0x2c2c40, 0x302c40, 0x342c40, 0x3c2c40, 0x402c40, 0x402c3c, 0x402c34, 0x402c30, 0x402c2c, 0x40302c, 0x40342c, 0x403c2c, 0x40402c, 0x3c402c, 0x34402c, 0x30402c,
    0x2c402c, 0x2c4030, 0x2c4034, 0x2c403c, 0x2c4040, 0x2c3c40, 0x2c3440, 0x2c3040, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
];

export function functest(p1){
	console.log("test2");
}

/*
export { font8x8_basic };
export { font8x8_block };
export { font8x8_box };
export { VGA_RGB_table };
*/